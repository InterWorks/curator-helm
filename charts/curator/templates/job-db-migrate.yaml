apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ .Release.Name }}-db-migrate"
  labels:
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "50"
spec:
  template:
    metadata:
      name: "{{ .Release.Name }}-admin-creation"
      labels:
        app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
        app.kubernetes.io/instance: {{ .Release.Name | quote }}
        helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    spec:
      restartPolicy: Never
      serviceAccountName: {{ include "curator.serviceAccountName" . }}
      containers:
      - name: db-migrate
        image: "{{ .Values.image.registry }}/{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        volumeMounts:
        - name: framework
          mountPath: /var/www/html/storage/framework
        - name: logs
          mountPath: /var/www/html/storage/logs
        - name: temp
          mountPath: /var/www/html/storage/temp
        - name: cms
          mountPath: /var/www/html/storage/cms
        - name: data
          mountPath: /var/www/html/storage/app
        {{- if .Values.curator.config }}
        {{- range $key, $value := .Values.curator.config }}
        - name: config
          mountPath: /var/www/html/config/{{ $key }}.php
          subPath: {{ $key }}.php
        {{- end }}
        {{- end }}
        command: [ "php", "artisan", "winter:up"]
        env:
          {{- include "env.environment" . | indent 10 -}}
          {{ range $key, $value := .Values.curator.env }}
          - name: "{{ $key }}"
            value: "{{ $value }}"
          {{- end }}
      volumes:
      - name: framework
        emptyDir:
      - name: logs
        emptyDir:
      - name: temp
        emptyDir:
      - name: cms
        emptyDir:
      {{ if (and .Values.persistence.enabled (not .Values.persistence.s3.enabled)) -}}
      - name: data
        persistentVolumeClaim:
          claimName: {{ printf "%s-%s" "data" .Release.Name }}
      {{- else -}}
      - name: data
        emptyDir:
      {{- end }}
      {{- if .Values.curator.config }}
      - name: config
        configMap:
          name: {{ include "curator.fullname" . }}-config
      {{- end }}
